name: Publish to PyPI

on:
  release:
    types:
      - released

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/djoser/

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Get release tag
        id: get_tag
        run: |
          TAG=$(git describe --tags)
          echo "TAG=$TAG" >> $GITHUB_ENV
          VERSION=${TAG#v}  # Remove "v" prefix if present
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update package version from tag
        run: |
          echo "Updating version to ${{ env.VERSION }}"
          # Update version in pyproject.toml
          sed -i "s/version = \".*\"/version = \"${{ env.VERSION }}\"/" pyproject.toml

      - name: Compile translations
        run: |
          echo "Compiling translation files..."
          uv run pybabel compile --domain django --directory djoser/locale -f

      - name: Build package
        run: |
          echo "Building package..."
          uv build
          echo "Package contents:"
          ls -l dist/

      # Test PyPI deployment for pre-releases
      - name: Publish to Test PyPI
        if: github.event.release.prerelease
        run: |
          echo "Publishing to Test PyPI..."
          uv publish --index-url https://test.pypi.org/legacy/ --token ${{ secrets.TEST_PYPI_TOKEN }}
          echo "Package published to Test PyPI successfully"

      # Production PyPI deployment
      - name: Publish to PyPI
        if: "!github.event.release.prerelease"
        run: |
          echo "Publishing to PyPI..."
          uv publish --token ${{ secrets.PYPI_TOKEN }}
          echo "Package published to PyPI successfully"

      - name: Verify publish
        run: |
          echo "Published version ${{ env.VERSION }} successfully"
          echo "Package is available at https://pypi.org/p/djoser/${{ env.VERSION }}/"
